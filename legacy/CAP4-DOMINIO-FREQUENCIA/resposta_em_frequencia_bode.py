# -*- coding: utf-8 -*-
"""Resposta em Frequencia_BODE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lKKe-Xus7GU16pVdV5jGpPkbgz3bTG5J
"""

# Trazer o módulo SymPy
import sympy
from sympy import *
from sympy.physics.control.lti import TransferFunction
from sympy.physics.control.control_plots import bode_plot # Plotar o diagrama de Bode
s = symbols('s')

# Print mais bonito no SymPy
init_printing(use_unicode=True)

print("Diagrama de Bode para a Função de Transferência G(s) = 2/(s³(s² + 12s + 32))")

# Definir a função de transferência diretamente
num = 2
den = s**3 * (s**2 + 12*s + 32)

# Criar o objeto TransferFunction
tf = TransferFunction(num, den, s)
print("\nFunção de Transferência:")
print(tf)

# Expandir o denominador para visualização
den_expandido = expand(den)
print("\nDenominador expandido:")
print(den_expandido)

# Plotar o diagrama de Bode
print("\nGerando o diagrama de Bode...")
print("O diagrama superior mostra a magnitude (em dB) vs. frequência")
print("O diagrama inferior mostra a fase (em graus) vs. frequência")

# Plotar com range de frequência adequado
bode_plot(tf, initial_exp=-1, final_exp=2)

print("\nAnálise do Diagrama de Bode:")
print("- A magnitude cai com -100 dB/década nas baixas frequências devido ao termo s³")
print("- Há uma queda adicional de -40 dB/década nas altas frequências devido ao termo (s² + 12s + 32)")
print("- A fase começa em -270° nas baixas frequências devido ao termo s³")
print("- A fase se aproxima de -450° nas altas frequências devido à contribuição adicional de (s² + 12s + 32)")

