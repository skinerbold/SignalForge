# -*- coding: utf-8 -*-
"""calculo_TransfLaplace.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b0dm23traTeIYeRuSHBuY0Ix5546InBX
"""

# Importando o módulo SymPy
import sympy as sp
from sympy import *
init_printing(use_unicode=True)

# Definindo os símbolos usados na Transformada de Laplace
t, s = sp.symbols('t, s')
a = sp.symbols('a', real=True, positive=True)
exp = sp.exp # exponencial na base e (Euler)
sin = sp.sin # função seno
cos = sp.cos # função cosseno
coship = sp.cosh # função cosseno hiperbólico
senhip = sp.sinh # função seno hiperbólico

# Definindo a função do SymPy que executa a Transformada de Laplace
def Laplace(f):
  return sp.laplace_transform(f, t, s, noconds=True)

# Funções a serem calculadas
print("Transformada de Laplace das funções:")

# a) f(t) = e^(3t)cos(2t)
f_a = exp(3*t)*cos(2*t)
Fs_a = Laplace(f_a)
print("\na) f(t) = e^(3t)cos(2t)")
print("F(s) =", Fs_a)
print("F(s) simplificado =", simplify(Fs_a))

# b) f(t) = t^5e^(4t)
f_b = (t**5)*exp(4*t)
Fs_b = Laplace(f_b)
print("\nb) f(t) = t^5e^(4t)")
print("F(s) =", Fs_b)
print("F(s) simplificado =", simplify(Fs_b))

# c) f(t) = sen(5t)cos(6t)
f_c = sin(5*t)*cos(6*t)
Fs_c = Laplace(f_c)
print("\nc) f(t) = sen(5t)cos(6t)")
print("F(s) =", Fs_c)
print("F(s) simplificado =", simplify(Fs_c))

# d) f(t) = senh(t)
f_d = senhip(t)
Fs_d = Laplace(f_d)
print("\nd) f(t) = senh(t)")
print("F(s) =", Fs_d)
print("F(s) simplificado =", simplify(Fs_d))

# Exibir todas as transformadas em formato matemático
print("\nExibição em formato matemático:")
print("F_a(s) =", Fs_a)
print("F_b(s) =", Fs_b)
print("F_c(s) =", Fs_c)
print("F_d(s) =", Fs_d)