# -*- coding: utf-8 -*-
"""RespostaImpulsoUnitário.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XVKkS6FPXEQ5pO-AqHIJFk2JTeY71C-B

Resposta ao Impulso Unitário
"""

import sympy as sp

def resposta_ao_impulso(P_s, Q_s):
    # Define as variáveis simbólicas para o tempo e a variável de Laplace
    t = sp.symbols('t', real=True, positive=True)
    s = sp.symbols('s')

    # Calcula a função de transferência H_s
    H_s = P_s / Q_s

    # Calcula a resposta ao impulso h(t) pela transformada inversa de Laplace
    h_t = sp.inverse_laplace_transform(H_s, s, t)

    return h_t

def verificar_sistema_instantaneo(P_s, Q_s, h_t):
    s = sp.symbols('s')
    t = sp.symbols('t', real=True, positive=True)
    
    # Calcula os graus dos polinômios P(s) e Q(s)
    grau_P = sp.degree(P_s, s)
    grau_Q = sp.degree(Q_s, s)

    # Verifica se o sistema é instantâneo (grau de P(s) >= grau de Q(s))
    if grau_P >= grau_Q:
        # Obtém os coeficientes líderes dos polinômios P(s) e Q(s)
        b_0 = sp.LC(P_s, s)  # Coeficiente líder de P(s)
        a_0 = sp.LC(Q_s, s)  # Coeficiente líder de Q(s)
        
        # Adiciona o termo delta de Dirac
        termo_delta = sp.DiracDelta(t) * (b_0/a_0)
        return termo_delta + h_t
    else:
        return h_t

# Resolução do item a): (D² + 3D + 2)y(t) = (3D + 2)x(t)
print("Resolução do item a): (D² + 3D + 2)y(t) = (3D + 2)x(t)")
s = sp.symbols('s')
Q_s_a = s**2 + 3*s + 2  # Coeficientes do denominador (D² + 3D + 2)
P_s_a = 3*s + 2         # Coeficientes do numerador (3D + 2)

# Calculando a resposta ao impulso h_t para o item a)
h_t_a = resposta_ao_impulso(P_s_a, Q_s_a)
h_t_a_completo = verificar_sistema_instantaneo(P_s_a, Q_s_a, h_t_a)

# Exibindo a resposta ao impulso para o item a)
print(f"h(t) = {h_t_a_completo}")
print(f"h(t) simplificado = {sp.simplify(h_t_a_completo)}")

# Resolução do item b): (D² + 3D - 4)y(t) = (D² - 2)x(t)
print("\nResolução do item b): (D² + 3D - 4)y(t) = (D² - 2)x(t)")
Q_s_b = s**2 + 3*s - 4  # Coeficientes do denominador (D² + 3D - 4)
P_s_b = s**2 - 2        # Coeficientes do numerador (D² - 2)

# Calculando a resposta ao impulso h_t para o item b)
h_t_b = resposta_ao_impulso(P_s_b, Q_s_b)
h_t_b_completo = verificar_sistema_instantaneo(P_s_b, Q_s_b, h_t_b)

# Exibindo a resposta ao impulso para o item b)
print(f"h(t) = {h_t_b_completo}")
print(f"h(t) simplificado = {sp.simplify(h_t_b_completo)}")